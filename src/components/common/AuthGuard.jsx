import { useState, useEffect } from 'react';
import { onAuthStateChanged } from 'firebase/auth';
import { auth } from '../../firebase/config';
import LoadingScreen from './LoadingScreen';

/**
 * GUARD ULTRA-SEGURO - Bloqueia TODA a aplica√ß√£o at√© verifica√ß√£o COMPLETA
 * N√£o renderiza NADA at√© ter certeza absoluta do estado de autentica√ß√£o
 */
function AuthGuard({ children }) {
  const [authState, setAuthState] = useState('CHECKING'); // CHECKING, AUTHENTICATED, UNAUTHENTICATED
  const [user, setUser] = useState(null);

  useEffect(() => {
    console.log('üîí AuthGuard: Iniciando verifica√ß√£o de seguran√ßa...');
    
    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {
      try {
        if (firebaseUser) {
          // Verifica√ß√£o DUPLA do token para garantir validade
          const token = await firebaseUser.getIdToken(true);
          if (token) {
            console.log('‚úÖ AuthGuard: Usu√°rio AUTENTICADO confirmado');
            setUser(firebaseUser);
            setAuthState('AUTHENTICATED');
          } else {
            console.log('‚ùå AuthGuard: Token inv√°lido');
            setUser(null);
            setAuthState('UNAUTHENTICATED');
          }
        } else {
          console.log('üë§ AuthGuard: Usu√°rio N√ÉO AUTENTICADO');
          setUser(null);
          setAuthState('UNAUTHENTICATED');
        }
      } catch (error) {
        console.error('üö® AuthGuard: Erro na verifica√ß√£o:', error);
        // Em caso de erro, assume N√ÉO AUTENTICADO por seguran√ßa
        setUser(null);
        setAuthState('UNAUTHENTICATED');
      }
    });

    // Timeout de seguran√ßa absoluto - se n√£o verificar em 3 segundos, assume n√£o logado
    const timeoutId = setTimeout(() => {
      if (authState === 'CHECKING') {
        console.warn('‚è∞ AuthGuard: TIMEOUT - Assumindo usu√°rio n√£o autenticado por seguran√ßa');
        setUser(null);
        setAuthState('UNAUTHENTICATED');
      }
    }, 3000);

    return () => {
      unsubscribe();
      clearTimeout(timeoutId);
    };
  }, []);

  // BLOQUEIO TOTAL - n√£o renderiza NADA enquanto n√£o tiver certeza
  if (authState === 'CHECKING') {
    console.log('‚è≥ AuthGuard: BLOQUEANDO renderiza√ß√£o - verificando...');
    return (
      <LoadingScreen 
        message="Verificando seguran√ßa..." 
        minimal={false}
      />
    );
  }

  // S√≥ passa o controle quando tem CERTEZA do estado
  console.log(`üéØ AuthGuard: Estado confirmado - ${authState}`);
  return children({ user, isAuthenticated: authState === 'AUTHENTICATED' });
}

export default AuthGuard;
