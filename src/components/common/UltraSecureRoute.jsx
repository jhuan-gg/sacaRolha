import { useAuth } from '../../contexts/AuthContext';
import { Navigate, useLocation } from 'react-router-dom';
import LoadingScreen from './LoadingScreen';
import { useState, useEffect } from 'react';

/**
 * Componente de rota ultra-seguro que elimina completamente o flash de conte√∫do
 * Implementa verifica√ß√£o tripla e renderiza√ß√£o condicional rigorosa
 */
const UltraSecureRoute = ({ children }) => {
  const { currentUser, loading, authChecked, initializing } = useAuth();
  const location = useLocation();
  const [renderAuthorized, setRenderAuthorized] = useState(false);
  const [isChecking, setIsChecking] = useState(true);

  useEffect(() => {
    // S√≥ para de verificar quando tudo estiver pronto
    if (!loading && !initializing && authChecked) {
      // Verifica√ß√£o tripla antes de autorizar renderiza√ß√£o
      if (currentUser) {
        console.log('üîí UltraSecureRoute: Usu√°rio autenticado - autorizando acesso');
        setRenderAuthorized(true);
      } else {
        console.log('üö´ UltraSecureRoute: Usu√°rio n√£o autenticado - bloqueando acesso');
        setRenderAuthorized(false);
      }
      setIsChecking(false);
    } else {
      // Se ainda est√° inicializando, bloqueia tudo
      setRenderAuthorized(false);
      setIsChecking(true);
    }
  }, [currentUser, loading, authChecked, initializing]);

  // PRIMEIRO BLOQUEIO: Se ainda est√° inicializando ou carregando
  if (loading || initializing || !authChecked || isChecking) {
    console.log('‚è≥ UltraSecureRoute: Verificando autentica√ß√£o...');
    return <LoadingScreen message="Verificando permiss√µes..." />;
  }

  // SEGUNDO BLOQUEIO: Se n√£o tem usu√°rio, redireciona IMEDIATAMENTE
  if (!currentUser || !renderAuthorized) {
    console.log('üö´ UltraSecureRoute: Acesso negado - redirecionando para login');
    return <Navigate to="/login" state={{ from: location }} replace />;
  }

  // TERCEIRO BLOQUEIO: Verifica√ß√£o final antes de renderizar
  if (!renderAuthorized) {
    console.log('‚õî UltraSecureRoute: Renderiza√ß√£o n√£o autorizada');
    return <LoadingScreen message="Carregando..." />;
  }

  // S√ì AGORA renderiza o conte√∫do protegido
  console.log('‚úÖ UltraSecureRoute: Acesso totalmente autorizado para:', location.pathname);
  return children;
};

export default UltraSecureRoute;
