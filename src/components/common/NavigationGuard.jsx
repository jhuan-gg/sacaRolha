import { useEffect } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { useAuth } from '../../contexts/AuthContext';

/**
 * Middleware de navega√ß√£o que intercepta todas as mudan√ßas de rota
 * e garante que usu√°rios n√£o autenticados n√£o vejam conte√∫do protegido
 */
export function NavigationGuard({ children }) {
  const { currentUser, loading } = useAuth();
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    // Rotas que n√£o precisam de autentica√ß√£o
    const publicRoutes = ['/login', '/error/500', '/error/403'];
    
    // Rotas protegidas
    const protectedRoutes = ['/home', '/listagem', '/cadastrar', '/visualizar', '/configuracoes'];
    
    const currentPath = location.pathname;

    // Se n√£o est√° carregando e n√£o tem usu√°rio autenticado
    if (!loading && !currentUser) {
      // Se est√° tentando acessar uma rota protegida
      if (protectedRoutes.includes(currentPath)) {
        console.log('üõ°Ô∏è NavigationGuard: Bloqueando acesso n√£o autorizado a', currentPath);
        navigate('/login', { replace: true });
        return;
      }
    }

    // Se tem usu√°rio autenticado e est√° na p√°gina de login
    if (!loading && currentUser && currentPath === '/login') {
      console.log('üè† NavigationGuard: Usu√°rio logado, redirecionando para dashboard');
      navigate('/home', { replace: true });
      return;
    }
  }, [currentUser, loading, location.pathname, navigate]);

  return children;
}

export default NavigationGuard;
